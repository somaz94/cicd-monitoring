name: CI/CD
on:
  push:
    branches:
      - main
      - develop
      - gcptest
  workflow_dispatch:
    inputs:
      service:
        description: Which service to be built. backend-celery or etc..
        required: true
        type: choice
        options:
          - backend
          - frontend

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [backend, frontend]
      fail-fast: false    
    env:
      PROJECT_NAME: wcidfu
      GCP_REGION: asia-northeast3
      PROJECT_ENV: ${{ (github.ref == 'refs/heads/main') && 'prod' || 'dev' }}
      SERVICE_NAME: ${{ matrix.service }}
      GCP_MGMT_PROJECT: ${{ secrets.GCP_MGMT_PROJECT }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # - name: Set GCP region KR
      #   run: |
      #     echo "environment : ${{ env.PROJECT_ENV }}"
      #     echo "GCP_REGION=asia-northeast3" >> $GITHUB_ENV

      - name: Configure GCP credentials
        id: auth         
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_lifetime: 500s

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Login to Artifact Registry
        id : artifact
        uses: docker/login-action@v3
        with:
          registry: ${{ env.GCP_REGION }}-docker.pkg.dev
          username: oauth2accesstoken
          password: ${{ steps.auth.outputs.access_token }}

      - name: Set short sha
        id: vars
        run: |
          echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3      

      - name: Build, tag, and push image to GCP Artifact Registry for '${{ matrix.service }}'
        if: ${{ github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.service == matrix.service) }}
        uses: docker/build-push-action@v5
        with:
          context: backend
          file: backend/${{ matrix.service }}.Dockerfile
          push: true
          tags: |
            ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_MGMT_PROJECT}}/${{ env.PROJECT_NAME }}-${{ matrix.service }}/${{ env.PROJECT_NAME }}-${{ matrix.service }}:${{ env.PROJECT_ENV }},
            ${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_MGMT_PROJECT }}/${{ env.PROJECT_NAME }}-${{ matrix.service }}/${{ env.PROJECT_NAME }}-${{ matrix.service }}:${{ steps.vars.outputs.short_sha }}
          build-args: |
            CI=true
            APP_ENV=${{ env.PROJECT_ENV }}
          cache-from: type=gha
          cache-to: type=gha,mode=max 
    outputs:
      image_tag: ${{ steps.vars.outputs.short_sha }}

  deploy_to_cloud_run:
    runs-on: ubuntu-latest
    needs: build_and_push
    strategy:
      matrix:
        service: [backend, frontend]
      fail-fast: false 
    env:
      PROJECT_NAME: wcidfu
      GCP_REGION: asia-northeast3
      PROJECT_ENV: ${{ (github.ref == 'refs/heads/main') && 'prod' || 'dev' }}
      SERVICE_NAME: ${{ matrix.service }}
      GCP_MGMT_PROJECT: ${{ secrets.GCP_MGMT_PROJECT }}
    permissions:
      contents: read
      id-token: write
    steps:
      - name: Configure GCP credentials
        id: auth         
        uses: google-github-actions/auth@v2
        with:
          token_format: access_token
          workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
          access_token_lifetime: 500s

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.PROJECT_NAME }}-${{ env.SERVICE_NAME }}-cloudrun \
            --image=${{ env.GCP_REGION }}-docker.pkg.dev/${{ env.GCP_MGMT_PROJECT }}/${{ env.PROJECT_NAME }}-${{ env.SERVICE_NAME }}/${{ env.PROJECT_NAME }}-${{ env.SERVICE_NAME }}:${{ needs.build_and_push.outputs.image_tag }} \
            --region=${{ env.GCP_REGION }} \
            --platform=managed \
            --project=${{ env.PROJECT_NAME }}    
