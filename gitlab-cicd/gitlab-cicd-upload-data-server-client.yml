stages:
  - upload_data_server
  - upload_data_client
# 스크립트에서 사용할 변수 설정
# CI_COMMIT_REF_NAME 파이프라인 실행하는 현재 브랜치명
#variables:

variables:
  STAGES:
    value: "upload_data_server"
    description: "Select the stages: upload_data_server or upload_data_client(use web)"
    options:
      - "upload_data_server"
      - "upload_data_client"

.change_files_server: &change_files_server
  changes:
#    - CommonEnum/*
#    - CSV
#     - Convertor/ServerJson/*
    - Convertor/ServerJson/version/*
    - Convertor/ServerJson/enum/*

upload_data_server:
  stage: upload_data_server
  resource_group: server_data_upload
  interruptible: true
  image: google/cloud-sdk:alpine

  before_script:
    - apk update && apk add openssh-client rsync git
    - eval $(ssh-agent -s)
    - >
      if [[ "$CI_COMMIT_REF_NAME" =~ ^somaz- ]]; then
        echo "Using development SSH key for somaz"
        SSH_KEY="${DEV_SOMAZ_SSH_PRIVATE_KEY}"
      else
        echo "Using default somaz SSH key"
        SSH_KEY="${NFS_SSH_PRIVATE_KEY}"
      fi
    - echo "${SSH_KEY}" | ssh-add -
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\nUserKnownHostsFile=/dev/null" > ~/.ssh/config
  script:
    - >
      if [[ "$CI_COMMIT_REF_NAME" =~ ^somaz- ]]; then
        DESTINATION="root@master-node-somaz-dev.somaz.io:/data/sgn_cdn/gamedata/$CI_COMMIT_REF_NAME/"
        rsync -avzr --delete --progress -e "ssh -p 36422" Convertor/ServerJson/* root@master-node-somaz-dev.somaz.io:/data/sgn_cdn/gamedata/$CI_COMMIT_REF_NAME/
      else
        DESTINATION="oozoo@nfs-server.somaz.io:/data/sgn_cdn/gamedata/$CI_COMMIT_REF_NAME/"
        rsync -avzr --delete --progress Convertor/ServerJson/* "$DESTINATION"
      fi
  artifacts:
    paths:
      - Convertor/ServerJson/*
    expire_in: 1 days
  after_script:
    - apk add curl
    - apk add git
    - git config --global user.email "cicd@somaz.io"
    - git config --global user.name "cicd"
    - git clone http://cicd:${CICD_ACCESS_TOKEN}@gitlab.somaz.io/infra/kubernetes-infra.git
    - export ENV_REF=$(cat kubernetes-infra/applied/argocd/applicationset/environment_branch/${CI_COMMIT_REF_NAME}.txt)
    - echo $ENV_REF
    - rm -rf kubernetes-infra  # Cleanup    
    - CHANGED_ServerJson=$(git diff --name-only HEAD~1 HEAD | grep ServerJson | grep -E '\.json$' | awk -F/ '{print $NF}' | awk -F. '{print $1}')
    # - "curl -X POST -F token=${GAMESERVER_TRIGGER_TOKEN} -F ref=${CI_COMMIT_REF_NAME} -F variables[project_id]=${CI_PROJECT_ID} -F variables[changed_ServerJson]=\"${CHANGED_ServerJson}\" -F variables[job_id]=${CI_JOB_ID}  http://gitlab.somaz.io/api/v4/projects/100/trigger/pipeline"
    - >
      curl -X POST -F token=${GAMESERVER_TRIGGER_TOKEN} -F ref=${ENV_REF} -F variables[project_id]=${CI_PROJECT_ID} -F variables[changed_ServerJson]="${CHANGED_ServerJson}" -F variables[job_id]=${CI_JOB_ID} -F variables[NAMESPACE]=${CI_COMMIT_REF_NAME} http://gitlab.somaz.io/api/v4/projects/100/trigger/pipeline
  tags:
    - build-image
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      <<: *change_files_server
    - if: '$CI_PIPELINE_SOURCE == "web" && $STAGES == "upload_data_server"'


.change_files_client: &change_files_client
  changes:
    - Convertor/ClientJson/*

upload_data_client:
  stage: upload_data_client
  resource_group: client_data_upload
  interruptible: true
  retry:
    max: 2  # Maximum of 2 retries
    when:
      - runner_system_failure
      - unknown_failure
  image:
    name: google/cloud-sdk:alpine
    entrypoint: [""]
  variables:
    GCS_DESTINATION_PREFIX: "gamedata/${CI_COMMIT_REF_NAME}/latest"
  before_script:
    - echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
    - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
  script:
    - export PYTHONWARNINGS="ignore"
    - gsutil -m rsync -r Convertor/ClientJson/ gs://${GCS_BUCKET_NAME}/${GCS_DESTINATION_PREFIX}/
    - gsutil -m cp Convertor/ServerJson/enum/CommonEnum.json gs://${GCS_BUCKET_NAME}/${GCS_DESTINATION_PREFIX}/enum/CommonEnum.json
  artifacts:
    paths:
      - Convertor/ClientJson/*
    expire_in: 1 days
  tags:
    - build-image
  rules:
    - if: '$CI_PIPELINE_SOURCE == "push"'
      <<: *change_files_client
    - if: '$CI_PIPELINE_SOURCE == "web" && $STAGES == "upload_data_client"'

# upload_data_client:
#   stage: upload_data_client
#   image: google/cloud-sdk:alpine # Use the Google Cloud SDK Docker image

#   before_script:
#     - set -x
#     - echo $GCLOUD_SERVICE_KEY | base64 -d > ${HOME}/gcloud-service-key.json
#     - cat ${HOME}/gcloud-service-key.json
#     - echo '172.217.26.234 oauth2.googleapis.com' >> /etc/hosts
#     - echo '142.250.206.234 cloudresourcemanager.googleapis.com' >> /etc/hosts
#     - gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json --verbosity=debug 
#     - gcloud --verbosity=debug config set project $GCLOUD_PROJECT_ID
#   script:
#     # Use gsutil to sync files to GCP Cloud Storage
#     - gsutil -D -m rsync -r -d Convertor/ClientJson/ gs://${GCS_BUCKET_NAME}/gamedata/$CI_COMMIT_REF_NAME/latest/
#   artifacts:
#     paths:
#       - Convertor/ClientJson/*
#     expire_in: 1 days
#   tags:
#     - build-image
#   rules:
#     - if: '$CI_PIPELINE_SOURCE == "push" && ($CI_COMMIT_REF_NAME == "dev1")'
#       <<: *change_files_client
#     - if: '$CI_PIPELINE_SOURCE == "web" && ($CI_COMMIT_REF_NAME == "dev1")'
